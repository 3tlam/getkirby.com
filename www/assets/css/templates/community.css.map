{"version":3,"sources":["webpack:///./src/scss/templates/src/scss/templates/community.scss","webpack:///./src/scss/templates/src/scss/tools/mq.scss","webpack:///./src/scss/templates/community.scss"],"names":[],"mappings":"AAKA,4BACE,eCwJE,wBDzJJ,4BAII,4BEAD,CACF,oCFMC,eEAD,6BFIC,kBACA,wBACA,mBACA,cCuIE,wBD3IJ,6BAMI,yBEGD,CDkIC,wBD3IJ,6BASI,eEMD,CACF,mBFFC,aACA,kBACA,eEMD,2BFFC,kBACA,mBCsHE,wBDxHJ,2BAKI,UEQD,CD2GC,wBDxHJ,2BASI,qBEUD,CACF,6BFNC,cEUD,gCFNC,YACA,gBACA,iBACA,4EACA,0BEUD,sBFJC,mBEUD,yBFPC,eEWD,yBFRC,cACA,eACA,cCoFE,wBDhFF,sBACE,aACA,mBEYD,yBFTC,aEaD,CACF,iBFNC,aACA,eACA,6BEYD,gBFRC,kBACA,mBACA,eEYD,uBFRC,cACA,WACA,cEYD,sBFRC,cACA,gBACA,4EEYD,sBFRC,mBEYD,yBFRC,qBACA,eEYD,sBFRC,aACA,oBEYD,4BFRC,UEYD,2BFNC,aACA,eACA,uBEYD,2BFRC,WACA,cACA,oBACA,qBEYD,yBFRC,2BACE,aACA,4DACA,gBACA,8BEYD,2BFRC,SEYD","file":"css/templates/community.css","sourcesContent":["$ENV: production;\n@import \"../includes\";\n\n/* -----  Hero  ---------------------------------------------------- */\n\n.community-page-hero .intro {\n  max-width: none;\n\n  @include mq(from m) {\n    columns: 2;\n  }\n}\n\n/* -----  Plugins  ---------------------------------------------------- */\n\n.community-plugins-container .intro {\n  max-width: none;\n}\n\n.community-plugins-container {\n  position: relative;\n  padding: 1.5rem 1.5rem 0;\n  background: darken($color-anthracite, 5%);\n  color: $color-syntax-white;\n  @include mq(from m) {\n    padding: 3rem 3rem 1.5rem;\n  }\n  @include mq(from l) {\n    margin: 0 -3rem;\n  }\n}\n\n.community-plugins {\n  display: flex;\n  margin-left: -3rem;\n  flex-wrap: wrap;\n}\n\n.community-plugins article {\n  padding-left: 3rem;\n  margin-bottom: 3rem;\n\n  @include mq(from s) {\n    width: percentage(1 / 2);\n  }\n\n  @include mq(from m) {\n    width: percentage(1 / 3);\n  }\n}\n\n.community-plugins article > a {\n  display: block;\n}\n\n.community-plugins article h3 + p {\n  flex-grow: 0;\n  font-weight: 400;\n  font-size: .75rem;\n  font-family: $font-mono;\n  color: rgba($color-syntax-white, .7);\n}\n\n/* -----  Themes  ----------------------------------------------------- */\n\n.community-themes > div {\n  background: $color-background;\n}\n.community-themes .intro {\n  padding: 1.5rem;\n}\n.community-themes figure {\n  line-height: 0;\n  flex-basis: 50%;\n  flex-shrink: 0;\n}\n\n@include mq(from m) {\n  .community-themes > div {\n    display: flex;\n    align-items: center;\n  }\n  .community-themes .intro {\n    padding: 3rem;\n  }\n\n}\n\n/* -----  Team Section  ----------------------------------------------------- */\n\n.community-mates {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n}\n\n.community-mate {\n  text-align: center;\n  margin-bottom: 3rem;\n  padding: 0 1rem;\n}\n\n.community-mate figure {\n  display: block;\n  width: 4rem;\n  margin: 0 auto;\n}\n\n.community-mate small {\n  display: block;\n  line-height: 1.5;\n  font-family: $font-mono;\n}\n\n.community-mate-links {\n  white-space: nowrap;\n}\n\n.community-mate-links li {\n  display: inline-block;\n  margin: 0 .5rem;\n}\n\n.community-mate svg * {\n  fill: $color-yellow;\n  transition: fill .3s;\n}\n\n.community-mate svg:hover * {\n  fill: $color-black;\n}\n\n/* -----  Contributors  ----------------------------------------------------- */\n\n.community-contributors ul {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n}\n\n.community-contributors li {\n  width: 3rem;\n  line-height: 0;\n  margin-right: 1.5rem;\n  margin-bottom: 1.5rem;\n}\n\n@supports (display: grid) {\n  .community-contributors ul {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(1.5rem, 3rem));\n    grid-gap: 1.5rem;\n    justify-content: space-between;\n  }\n\n  .community-contributors li {\n    margin: 0;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scss/templates/src/scss/templates/community.scss","//  \n//  mÂµ\n//  \n//  A simple library for handling media queries\n//  and breakpoints across SASS/CSS and JavaScript.\n//  \n//  @author Fabian Michael <hallo@fabianmichael.de>\n//  @license MIT\n//  \n\n//  Define your breakpoints here. Must be either in px\n//  or em units. Breakpoints will be converted to em by\n//  the library for best consistency across different\n//  browsers.\n//  \n//  Read [PX, EM or REM Media Queries?](https://zellwk.com/blog/media-query-units/)\n//  by Zell Liew for more information on units in media queries.\n$mq-breakpoints: (\n  (xs 480px  4)\n  (sm 768px  8)\n  (md 1024px 12)\n  (lg 1280px 12)\n  (xl 1440px 12)\n) !default;\n\n//  Prints selectors for pseudo-elements, which are utilized\n//  by the JavaScript counterpart of the mÂµ library. Set to\n//  false, if you donât need the JavaScript functionality or\n//  you want to call `@include mq-print-pseudo-rules()`\n//  manually.\n$mq-print-pseudo-rules: true !default;\n\n// Debug settings\n$mq-debug: false !default;\n$mq-debug-z-index: 10000 !default;\n$mq-debug-selector: 'body::after' !default;\n\n\n//  Mixin for generating gte media queries\n// \n//  Usage:\n// \n//  @include mq(from md) {\n//    .nav {\n//      position: fixed;\n//    }\n//  }\n// \n//  or:\n// \n//  .nav {\n//    background: blue;\n//    \n//    @include mq(from xs to sm) {\n//      background: red;\n//    }\n//  }\n// \n// \n//  Supported queries:\n// \n//  @include mq(md) { â¦ }\n//  @include mq(from md) { â¦ } // same as \"mq(md)\"\n//  @include mq(to md) { â¦ }\n//  @include mq(from xs to md) { â¦ }\n// \n//  With additional custom media queries:\n// \n//  @include mq(xs, '(orientation: landscape)') { â¦ }\n//  @include mq(from xs to md, '(orientation: landscape)') { â¦ }\n@mixin mq($query: false, $and: false) {\n\n  // Initialize variables\n  $min-width: 0;\n  $max-width: 0;\n  $media-query: '';\n\n  @if $query {\n    // $query is not false\n    @if type-of($query) == number {\n      $min-width: $query;\n    } @else if type-of($query) == list {\n      @if length($query) == 4 and nth($query, 1) == from and nth($query, 3) == to {\n        // from {breakpoint} to {breakpoint}\n        \n        $min-width: mq-px2em(mq-retrieve-breakpoint-width(nth($query, 2)));\n        $max-width: mq-px2em(mq-retrieve-breakpoint-width(nth($query, 4)) - 1px);\n\n      } @else if length($query) == 2 {\n        // one keyword + breakpoint\n        \n        $keyword: nth($query, 1);\n        $breakpoint: nth($query, 2);\n        \n        @if $keyword == from {\n          // from {breakpoint}\n          $min-width: mq-px2em(mq-retrieve-breakpoint-width($breakpoint));\n\n        } @else if $keyword == to {\n          // to {breakpoint}\n          $max-width: mq-px2em(mq-retrieve-breakpoint-width($breakpoint) - 1px);\n\n        } @else if $keyword == only {\n          // only {breakpoint}\n            \n          $items-length: length($mq-breakpoints);\n          $next-breakpoint: false;\n\n          @for $i from 1 through $items-length {\n            $item:      nth($mq-breakpoints, $i);\n            $item-name: nth($item, 1);\n\n            @if $next-breakpoint == true {\n              // breakpoint was found in last iteration\n              $next-breakpoint: $item-name;\n            } @else if $breakpoint == $item-name {\n              // breakpoint found, will be assigned in next iteration\n              $next-breakpoint: true;\n            }\n          }\n\n          $min-width: mq-px2em(mq-retrieve-breakpoint-width($breakpoint));\n\n          @if type-of($next-breakpoint) != bool {\n            $max-width: mq-px2em(mq-retrieve-breakpoint-width($next-breakpoint) - 1px);\n          }\n\n        } @else {\n          @error 'Invalid breakpoint query supplied to mq()';\n        }\n      }\n    } @else {\n      // {breakpoint} => from {breakpoint}\n      $min-width: mq-px2em(mq-retrieve-breakpoint-width($query));\n    }\n  }\n\n  // Build Media Query\n\n  @if $min-width != 0 {\n    $media-query: '(min-width: #{$min-width})';\n  }\n  \n  @if $max-width != 0 {\n    @if $media-query != \"\" {\n      $media-query: '#{$media-query} and '; \n    }\n    $media-query: '#{$media-query} (max-width: #{$max-width})';\n  }\n\n  @if $and {\n    $media-query: '#{$media-query} and #{$and}';\n  }\n\n  $media-query: unquote(#{$media-query});\n\n  @if $media-query != \"\" {\n    // Only print a media query if itâs not empty\n    @media #{$media-query} {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n\n//  Converts a pixel value to itâs em equivalent, based on\n//  the browserâs assumed default font-size of 16px. As media\n//  queries ignore font-sizes set via CSS, this function does\n//  not an additional \"base font size\" to be set.\n//  \n//  @return The em equivalent of given pixel value.\n@function mq-px2em($px) {\n\n  @if type-of($px) != number {\n    @error 'mq-px2em() value must be a number.';\n    @return 0;\n  }\n\n  @if (unitless($px)) {\n     @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels for you\"; // sass-lint:disable-line no-warn\n     @return mq-px2em($px + 0px); // That may fail.\n  } @else if (unit($px) == em) {\n     @return $px;\n  }\n  @return ($px / 16px) * 1em;\n}\n\n\n// Retrieves the min-width of a breakpoint in px, assuming\n// a font-size of 16px.\n// \n// @return The min-width of a breakpoint in pixels\n@function mq-retrieve-breakpoint-width($name) {\n  @each $breakpoint in $mq-breakpoints {\n    $breakpoint-name:  nth($breakpoint, 1);\n    $breakpoint-width: nth($breakpoint, 2);\n\n    @if $name == $breakpoint-name {\n      @if unit($breakpoint-width) == em {\n        // Convert to px value, if breakpoints where defined\n        // in em\n        $breakpoint-width: $breakpoint-width / 16px;\n      }\n      @return $breakpoint-width;\n    }\n  }\n  @return 'Breakpoint #{$name} does not exist';\n}\n\n\n// Prints the pseudo-rule(s) needed by the JS counterpart\n// of mÂµ.\n@mixin mq-print-pseudo-rules {\n\n  $breakpoint-names: \"\";\n\n  @each $breakpoint in $mq-breakpoints {\n    $breakpoint-name: nth($breakpoint, 1);\n    $breakpoint-width: nth($breakpoint, 2);\n    $add: ' \"#{$breakpoint-name}\": \"(min-width: #{mq-px2em($breakpoint-width)})\" ';\n    @if $breakpoint-names != \"\" {\n      $breakpoint-names: \"#{$breakpoint-names},#{$add}\";\n    } @else {\n      $breakpoint-names: $add;\n    }\n  }\n\n  $breakpoint-names: \"{\" + $breakpoint-names + \"}\";\n\n  html::before {\n    /* Automatically generated by mq to be consumed by its JavaScript counterpart */\n    content: $breakpoint-names;\n    display: none;\n  }\n}\n\n@if $mq-print-pseudo-rules {\n  // Print pseudo-rules, if enabled\n  @include mq-print-pseudo-rules;\n}\n\n@mixin mq-debug {\n  // Print debug rules, if enabled\n  #{unquote($mq-debug-selector)} {\n    background: rgba(0,0,0,0.75);\n    bottom: 0;\n    color: #fff;\n    display: block;\n    font-family: monospace;\n    font-size: 10px;\n    line-height: 1;\n    padding: 3px 6px;\n    position: fixed;\n    right: 0;\n    z-index: $mq-debug-z-index;\n  }\n\n  @each $breakpoint in $mq-breakpoints {\n    $breakpoint-name:  nth($breakpoint, 1);\n    $breakpoint-width: nth($breakpoint, 2);\n\n    @include mq($breakpoint-name) {\n      #{unquote($mq-debug-selector)} {\n        content: \"Breakpoint: #{$breakpoint-name} (>= #{$breakpoint-width}) | Template: \" attr(data-template);\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scss/templates/src/scss/tools/mq.scss","/* -----  Hero  ---------------------------------------------------- */\n\n.community-page-hero .intro {\n  max-width: none;\n}\n\n@media (min-width: 56em) {\n  .community-page-hero .intro {\n    columns: 2;\n  }\n}\n\n/* -----  Plugins  ---------------------------------------------------- */\n\n.community-plugins-container .intro {\n  max-width: none;\n}\n\n.community-plugins-container {\n  position: relative;\n  padding: 1.5rem 1.5rem 0;\n  background: #313741;\n  color: #c5c9c6;\n}\n\n@media (min-width: 56em) {\n  .community-plugins-container {\n    padding: 3rem 3rem 1.5rem;\n  }\n}\n\n@media (min-width: 75em) {\n  .community-plugins-container {\n    margin: 0 -3rem;\n  }\n}\n\n.community-plugins {\n  display: flex;\n  margin-left: -3rem;\n  flex-wrap: wrap;\n}\n\n.community-plugins article {\n  padding-left: 3rem;\n  margin-bottom: 3rem;\n}\n\n@media (min-width: 38em) {\n  .community-plugins article {\n    width: 50%;\n  }\n}\n\n@media (min-width: 56em) {\n  .community-plugins article {\n    width: 33.3333333333%;\n  }\n}\n\n.community-plugins article > a {\n  display: block;\n}\n\n.community-plugins article h3 + p {\n  flex-grow: 0;\n  font-weight: 400;\n  font-size: .75rem;\n  font-family: \"SFMono-Regular\", Consolas, \"Liberation Mono\", Menlo, Courier, monospace;\n  color: rgba(197, 201, 198, 0.7);\n}\n\n/* -----  Themes  ----------------------------------------------------- */\n\n.community-themes > div {\n  background: #efefef;\n}\n\n.community-themes .intro {\n  padding: 1.5rem;\n}\n\n.community-themes figure {\n  line-height: 0;\n  flex-basis: 50%;\n  flex-shrink: 0;\n}\n\n@media (min-width: 56em) {\n  .community-themes > div {\n    display: flex;\n    align-items: center;\n  }\n\n  .community-themes .intro {\n    padding: 3rem;\n  }\n}\n\n/* -----  Team Section  ----------------------------------------------------- */\n\n.community-mates {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n}\n\n.community-mate {\n  text-align: center;\n  margin-bottom: 3rem;\n  padding: 0 1rem;\n}\n\n.community-mate figure {\n  display: block;\n  width: 4rem;\n  margin: 0 auto;\n}\n\n.community-mate small {\n  display: block;\n  line-height: 1.5;\n  font-family: \"SFMono-Regular\", Consolas, \"Liberation Mono\", Menlo, Courier, monospace;\n}\n\n.community-mate-links {\n  white-space: nowrap;\n}\n\n.community-mate-links li {\n  display: inline-block;\n  margin: 0 .5rem;\n}\n\n.community-mate svg * {\n  fill: #cca000;\n  transition: fill .3s;\n}\n\n.community-mate svg:hover * {\n  fill: #000;\n}\n\n/* -----  Contributors  ----------------------------------------------------- */\n\n.community-contributors ul {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n}\n\n.community-contributors li {\n  width: 3rem;\n  line-height: 0;\n  margin-right: 1.5rem;\n  margin-bottom: 1.5rem;\n}\n\n@supports (display: grid) {\n  .community-contributors ul {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(1.5rem, 3rem));\n    grid-gap: 1.5rem;\n    justify-content: space-between;\n  }\n\n  .community-contributors li {\n    margin: 0;\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/scss/templates/community.scss"],"sourceRoot":""}